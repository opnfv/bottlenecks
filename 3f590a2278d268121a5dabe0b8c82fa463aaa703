{
  "comments": [
    {
      "key": {
        "uuid": "5ac10518_fccea282",
        "filename": "utils/infra_setup/heat/common.py",
        "patchSetId": 5
      },
      "lineNbr": 101,
      "author": {
        "id": 5959
      },
      "writtenOn": "2016-12-28T09:12:21Z",
      "side": 1,
      "message": "The name is \u0027OS_COMPUTE_API_VERSION\"",
      "range": {
        "startLine": 101,
        "startChar": 29,
        "endLine": 101,
        "endChar": 45
      },
      "revId": "3f590a2278d268121a5dabe0b8c82fa463aaa703",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac10518_1cc60e4a",
        "filename": "utils/infra_setup/heat/common.py",
        "patchSetId": 5
      },
      "lineNbr": 101,
      "author": {
        "id": 5439
      },
      "writtenOn": "2016-12-28T10:32:06Z",
      "side": 1,
      "message": "sure, it will be fixed in next patch,\nthank you",
      "parentUuid": "5ac10518_fccea282",
      "range": {
        "startLine": 101,
        "startChar": 29,
        "endLine": 101,
        "endChar": 45
      },
      "revId": "3f590a2278d268121a5dabe0b8c82fa463aaa703",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac10518_1cca8e6e",
        "filename": "utils/infra_setup/heat/common.py",
        "patchSetId": 5
      },
      "lineNbr": 109,
      "author": {
        "id": 5959
      },
      "writtenOn": "2016-12-28T09:12:21Z",
      "side": 1,
      "message": "The name is \u0027OS_IMAGE_API_VERSION\u0027",
      "range": {
        "startLine": 109,
        "startChar": 29,
        "endLine": 109,
        "endChar": 47
      },
      "revId": "3f590a2278d268121a5dabe0b8c82fa463aaa703",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac10518_fca3029c",
        "filename": "utils/infra_setup/heat/manager.py",
        "patchSetId": 5
      },
      "lineNbr": 50,
      "author": {
        "id": 6365
      },
      "writtenOn": "2016-12-28T09:38:19Z",
      "side": 1,
      "message": "here is right, but not a good habit.\nthe constant 30 should be write in a config file, and read the config file everytimes when start bottlenect.\n----\nThe reason is:\nFor example, it will failed everytimes if a system create a image need 31 seconds, and you will need another bottlenect version to solve it(that maybe make some user crazy^_^!).\nBut if you use config file, you just need to update the constant from 30 to 35 in config file and run bottleneck again.",
      "range": {
        "startLine": 50,
        "startChar": 51,
        "endLine": 50,
        "endChar": 53
      },
      "revId": "3f590a2278d268121a5dabe0b8c82fa463aaa703",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac10518_fcca224e",
        "filename": "utils/infra_setup/heat/manager.py",
        "patchSetId": 5
      },
      "lineNbr": 50,
      "author": {
        "id": 5439
      },
      "writtenOn": "2016-12-28T10:32:06Z",
      "side": 1,
      "message": "yeah, i agree this suggestion.\nthis magic number is no allowed in product programming.",
      "parentUuid": "5ac10518_fca3029c",
      "range": {
        "startLine": 50,
        "startChar": 51,
        "endLine": 50,
        "endChar": 53
      },
      "revId": "3f590a2278d268121a5dabe0b8c82fa463aaa703",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac10518_3cb50aee",
        "filename": "utils/infra_setup/heat/template.py",
        "patchSetId": 5
      },
      "lineNbr": 111,
      "author": {
        "id": 6365
      },
      "writtenOn": "2016-12-28T09:38:19Z",
      "side": 1,
      "message": "I think I know what you thought at here.\nMaybe the following codes are better:\nwhile i \u003c retries - 1:\n            try:\n                self._delete()\nexcept RuntimeError as err:\n                log.warn(err.args)\n                time.sleep(2)\n            i +\u003d 1\nself._delete()\n--\nPlease remember:\nthe delete() function will throw RuntimeError, and you should catch the exception in your function when the function call delete() function.",
      "revId": "3f590a2278d268121a5dabe0b8c82fa463aaa703",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac10518_5cb496d0",
        "filename": "utils/infra_setup/heat/template.py",
        "patchSetId": 5
      },
      "lineNbr": 111,
      "author": {
        "id": 5439
      },
      "writtenOn": "2016-12-28T10:32:06Z",
      "side": 1,
      "message": "when i use this code.\ni have a  question is that the last line:\nself._delete(),\nIs this expression don\u0027t need for catching the exception RuntimeError.\nThank you",
      "parentUuid": "5ac10518_3cb50aee",
      "revId": "3f590a2278d268121a5dabe0b8c82fa463aaa703",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac10518_dcede6b8",
        "filename": "utils/infra_setup/heat/template.py",
        "patchSetId": 5
      },
      "lineNbr": 111,
      "author": {
        "id": 6365
      },
      "writtenOn": "2016-12-28T12:19:26Z",
      "side": 1,
      "message": "According to the program flow:\nIf run self._delete() has a RuntimeError, it couldn\u0027t run HeatStack.stacks.remove(self).\nIs above logic right? \n1) If it is wrong or not important, okay, please ignore all my said.\n2) If it is right, see below:\n----\nwhile i \u003c retries:\n            try:\n                self._delete()\n                break\n            except RuntimeError as err:\n                log.warn(err.args)\n                time.sleep(2)\n            i +\u003d 1\nHeatStack.stacks.remove(self)\n--\nthe logic of above expression is wrong.\nThe reason is:\n(1) if retries \u003d 3; and it has several RuntimeError.\n(2) after 6 seconds  \n   run the self._delete() failed 3 times.\n(3) and then it will run HeatStack.stacks.remove(self),\n   but actually, self._delete() function deleted nothing, and we couldn\u0027t run HeatStack.stacks.remove(self) at this situation.\n---\nSo, there are update 2 place:\n(1)while i \u003c retries - 1:\n(2)the last line: self._delete()\nthe reason is: \nA) if try self._delete() \"retries - 1\" failed and have some RuntimeError.\nB) it will run self._delete() last time and do not catch RuntimeError.\nC) if the step B) have some RuntimeError, it won\u0027t run HeatStack.stacks.remove(self) and throw RuntimeError.\nD) otherwise, it will run self._delete() success, then run HeatStack.stacks.remove(self).",
      "parentUuid": "5ac10518_5cb496d0",
      "revId": "3f590a2278d268121a5dabe0b8c82fa463aaa703",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac10518_9cf2fe6d",
        "filename": "utils/infra_setup/heat/template.py",
        "patchSetId": 5
      },
      "lineNbr": 111,
      "author": {
        "id": 5439
      },
      "writtenOn": "2016-12-29T01:11:56Z",
      "side": 1,
      "message": "Ok, i know your meaning now.\nYou mean if we try three times and all the expression have thought the error :RuntimeError.\nNow,\ni add the following code.\n\nwhile i \u003c retries:\n            try:\n                self._delete()\n                break\n            except RuntimeError as err:\n                log.warn(err.args)\n                time.sleep(2)\n            i +\u003d 1\n\nif self.uuid is not None:\n           sys.exit(\"delete stack failed!!!\")\nelse:\n           HeatStack.stacks.remove(self)\n\nthis code could help us achieve this problem.\n\nThank you for your kindness.\n\nDoes this code have some error?\n\nThank you.",
      "parentUuid": "5ac10518_dcede6b8",
      "revId": "3f590a2278d268121a5dabe0b8c82fa463aaa703",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac10518_bcfc9a3f",
        "filename": "utils/infra_setup/heat/template.py",
        "patchSetId": 5
      },
      "lineNbr": 111,
      "author": {
        "id": 6365
      },
      "writtenOn": "2016-12-29T01:50:21Z",
      "side": 1,
      "message": "Good job!\nIt\u0027s your idea in the original version , not mine:\n-----\n# if still not deleted try once more and let it fail everything\n        if self.uuid is not None:\n            self._delete()\n-----\nsorry to misunderstand it at the first time. \n-----\nBesides\n1)Maybe the Ninety-ninth lines expression need updated also.\n(if self._delete throw RuntimeError, should we handle it?)\n2)here are right, but i think it\u0027s not a good habit that exit program everywhere, Maybe the bottleneck project need only one entry to exit this program no matter the result is success or failure or have some exceptions.",
      "parentUuid": "5ac10518_9cf2fe6d",
      "revId": "3f590a2278d268121a5dabe0b8c82fa463aaa703",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac10518_3cb74a88",
        "filename": "utils/infra_setup/heat/template.py",
        "patchSetId": 5
      },
      "lineNbr": 111,
      "author": {
        "id": 5439
      },
      "writtenOn": "2016-12-29T02:23:42Z",
      "side": 1,
      "message": "Yeah, i have done those changes.\nAnd the stack can\u0027t delete is not an error, but a warning.\nso it\u0027s better to except this.\nThank you.",
      "parentUuid": "5ac10518_bcfc9a3f",
      "revId": "3f590a2278d268121a5dabe0b8c82fa463aaa703",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac10518_9c8c3e37",
        "filename": "utils/infra_setup/heat/template.py",
        "patchSetId": 5
      },
      "lineNbr": 122,
      "author": {
        "id": 6365
      },
      "writtenOn": "2016-12-28T09:38:19Z",
      "side": 1,
      "message": "it\u0027s better to use \u0027pass\u0027 here than raise exception.(raise exception may mislead reader)",
      "revId": "3f590a2278d268121a5dabe0b8c82fa463aaa703",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    }
  ]
}