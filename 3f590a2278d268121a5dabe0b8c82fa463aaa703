{
  "comments": [
    {
      "key": {
        "uuid": "5ac10518_fccea282",
        "filename": "utils/infra_setup/heat/common.py",
        "patchSetId": 5
      },
      "lineNbr": 101,
      "author": {
        "id": 5959
      },
      "writtenOn": "2016-12-28T09:12:21Z",
      "side": 1,
      "message": "The name is \u0027OS_COMPUTE_API_VERSION\"",
      "range": {
        "startLine": 101,
        "startChar": 29,
        "endLine": 101,
        "endChar": 45
      },
      "revId": "3f590a2278d268121a5dabe0b8c82fa463aaa703",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac10518_1cca8e6e",
        "filename": "utils/infra_setup/heat/common.py",
        "patchSetId": 5
      },
      "lineNbr": 109,
      "author": {
        "id": 5959
      },
      "writtenOn": "2016-12-28T09:12:21Z",
      "side": 1,
      "message": "The name is \u0027OS_IMAGE_API_VERSION\u0027",
      "range": {
        "startLine": 109,
        "startChar": 29,
        "endLine": 109,
        "endChar": 47
      },
      "revId": "3f590a2278d268121a5dabe0b8c82fa463aaa703",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac10518_fca3029c",
        "filename": "utils/infra_setup/heat/manager.py",
        "patchSetId": 5
      },
      "lineNbr": 50,
      "author": {
        "id": 6365
      },
      "writtenOn": "2016-12-28T09:38:19Z",
      "side": 1,
      "message": "here is right, but not a good habit.\nthe constant 30 should be write in a config file, and read the config file everytimes when start bottlenect.\n----\nThe reason is:\nFor example, it will failed everytimes if a system create a image need 31 seconds, and you will need another bottlenect version to solve it(that maybe make some user crazy^_^!).\nBut if you use config file, you just need to update the constant from 30 to 35 in config file and run bottleneck again.",
      "range": {
        "startLine": 50,
        "startChar": 51,
        "endLine": 50,
        "endChar": 53
      },
      "revId": "3f590a2278d268121a5dabe0b8c82fa463aaa703",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac10518_3cb50aee",
        "filename": "utils/infra_setup/heat/template.py",
        "patchSetId": 5
      },
      "lineNbr": 111,
      "author": {
        "id": 6365
      },
      "writtenOn": "2016-12-28T09:38:19Z",
      "side": 1,
      "message": "I think I know what you thought at here.\nMaybe the following codes are better:\nwhile i \u003c retries - 1:\n            try:\n                self._delete()\nexcept RuntimeError as err:\n                log.warn(err.args)\n                time.sleep(2)\n            i +\u003d 1\nself._delete()\n--\nPlease remember:\nthe delete() function will throw RuntimeError, and you should catch the exception in your function when the function call delete() function.",
      "revId": "3f590a2278d268121a5dabe0b8c82fa463aaa703",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac10518_9c8c3e37",
        "filename": "utils/infra_setup/heat/template.py",
        "patchSetId": 5
      },
      "lineNbr": 122,
      "author": {
        "id": 6365
      },
      "writtenOn": "2016-12-28T09:38:19Z",
      "side": 1,
      "message": "it\u0027s better to use \u0027pass\u0027 here than raise exception.(raise exception may mislead reader)",
      "revId": "3f590a2278d268121a5dabe0b8c82fa463aaa703",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    }
  ]
}