
# workers.properties -
#
# This file provides jk derived plugins with the needed information to
# connect to the different tomcat workers.  Note that the distributed
# version of this file requires modification before it is usable by a
# plugin.
#

# workers.tomcat_home should point to the location where you
# installed tomcat. This is where you have your conf, webapps and lib
# directories.
workers.tomcat_home=REPLACED_RUBBOS_APP_TOOLS/apache-tomcat-5.5.17

# workers.java_home should point to your Java installation. Normally
# you should have a bin and lib directories beneath it.
workers.java_home=REPLACED_RUBBOS_APP_TOOLS/jdk1.6.0_27

# You should configure your environment slash... ps=\ on NT and / on UNIX
# and maybe something different elsewhere.
ps=/


# The workers that your plugins should create and work with
worker.list=worker1

# Here, it can be declared multiple session handlers, such as s1, s2
REPLACED_HANDLERS_DETAILS
# examples:
#worker.s1.port=8009
#worker.s1.host=btnks-2
#worker.s1.type=ajp13
#worker.s1.lbfactor=1

worker.worker1.type=lb
worker.worker1.balance_workers=REPLACED_HANDLERS
# example:
#worker.worker1.balance_workers=s1
worker.worker1.sticky_session=True
worker.worker1.method=Session

# Defining a worker named inprocess and of type jni
# Note that the name and the type do not have to match.
worker.inprocess.type=jni

# Additional class path components.
worker.inprocess.class_path=$(workers.tomcat_home)$(ps)lib$(ps)tomcat.jar

# Setting the command line for tomcat. 
# Note: The cmd_line string may not contain spaces.
worker.inprocess.cmd_line=start

worker.inprocess.jvm_lib=$(workers.java_home)$(ps)jre$(ps)lib$(ps)i386$(ps)server$(ps)libjvm.so
worker.inprocess.stdout=$(workers.tomcat_home)$(ps)logs$(ps)inprocess.stdout
worker.inprocess.stderr=$(workers.tomcat_home)$(ps)logs$(ps)inprocess.stderr
